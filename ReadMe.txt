백준 4948 문제 풀이 중입니다.

문제 풀이를 완료했습니다.

해당 코드는 메모리량 1360kb이지만 8ms 시간이 걸렸습니다. 고로 개선이 가능합니다.

해당 코드에선 소수를 저장할 배열인 pr을 만들어 246912 까지의 모든 소수를 저장해 둡니다.

다만 해당 범위까지의 소수를 찾기 위해 에라스토테네스의 체 두 번째 반복문의 j는 제곱의 범위를 사용할 수 있도록 자료형을

long long으로 해줘야 합니다.

실제 수를 찾는 구간에선 이전에 만들어 두었던 소수들의 배열에서 각각의 해당 번째를 찾아 2n의 소수 위치와 n의 소수 위치를 빼

결과를 출력합니다.

여기서 lower_bound, upper_bound 함수는 이진 탐색 함수로 주어지는 배열을 항상 정렬되어 있어야 하고, upper_bound의 경우

주어진 배열은 정렬되어 있으면서 오름차순이어야 합니다.

lower_bound 함수가 반환하는 값은 주어진 배열에서 key값의 위치이고 key값이 없을 경우 key값보다 큰 가장 작은 정수 값을 찾아 반환합니다.

upper_bound 함수의 경우주어진 배열에서 key값을 초과하는 가장 첫 번째 원소의 위치를 반환합니다.

고로 lower_bound를 통해 2n보다 작은 소수의 위치를 구하고, n보다 큰 소수의 위치를 구해 빼주면 그 구간 안에 소수가 몇 개가 있는지 파악

할 수 있습니다.
